{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalAPI.js","../src/complier/parse.js","../src/complier/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const strats = {};\r\nconst LIFECYCLE = ['beforeCreate', 'created'];\r\nLIFECYCLE.forEach(hook => {\r\n    strats[hook] = function (p, c) {\r\n        if (c) {\r\n            if (p) {\r\n                return p.concat(c);\r\n            } else {\r\n                return [c];\r\n            }\r\n        } else {\r\n            return p;\r\n        }\r\n    };\r\n});\r\n\r\nexport function mergeOptions(parent, child) {\r\n    const options = {};\r\n    for (let key in parent) {\r\n        mergeField(key);\r\n    }\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key);\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        // 用策略模式，减少if else\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key]);\r\n        } else {\r\n            // 不在策略中，以儿子为准\r\n            options[key] = child[key] || parent[key]; // 优先儿子，最后用父级\r\n        }\r\n    }\r\n    return options;\r\n}","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    Vue.options = {};\r\n    Vue.mixin = function(mixin) {\r\n        // 期望将用户的选项和全聚德options进行合并\r\n        // mixin(xxx(){}) => {xxx: [fn]}\r\n        // {xxx: [fn]}  mixin(xxx(){}) => {xxx: [fn, fn]}\r\n        this.options = mergeOptions(this.options, mixin);\r\n        return this;\r\n    }\r\n    // Vue.extend = function(options) {\r\n    //     function Sub() {\r\n\r\n    //     }\r\n    //     Sub.prototype = Object.create(Vue.prototype); // Sub.prototype.__proto__ === Vue.prototype\r\n    //     Sub.options = options; // 保存用户传递的选项\r\n    //     return Sub;\r\n    // }\r\n}","// vue3并没有使用正则匹配\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个标签名  <xxx 匹配到的是开始 标签的名字\r\n\r\nconst startTagClose = /^\\s*(\\/?)>/;  // 开始标签的结尾  > <br/>\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配标签中的属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\n\r\nexport function parseHTML(html) {\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 记录当前匹配的标签，碰到配对的结束标签则出站\r\n    let currentParent;\r\n    let root;\r\n\r\n    // 最终转化成为抽象语法树\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null,\r\n        }\r\n    }\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs);\r\n\r\n        // 进入时没有根标签说明其就是根标签\r\n        if (!root) {\r\n            root = node;\r\n        }\r\n        // 下一个开始标签进入时，已经存在标签了，则自身为子标签\r\n        if (currentParent) {\r\n            node.parent = currentParent;\r\n            currentParent.children.push(node);\r\n        }\r\n        stack.push(node); // 入栈\r\n        currentParent = node; // currentParent是栈中的最后(后入先出)一个\r\n    }\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, ''); // 如果空格超过2则不删除\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent,\r\n        });\r\n    }\r\n    function end() {\r\n        stack.pop();\r\n        currentParent = stack[stack.length - 1]; // 将栈中的最后(后入先出)一个设为当前父元素\r\n    }\r\n    // 将匹配完的字符串截取掉\r\n    function advance(len) {\r\n        html = html.substring(len);\r\n    }\r\n    // 匹配解析字符串的开始标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: [],\r\n            };\r\n            advance(start[0].length);\r\n            // 继续匹配开始标签名之后的内容\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                // attribute是匹配到的 0：属性名和值，1：属性名，2：=，3\\4\\5：属性值\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n            }\r\n            // 匹配到开始标签的结束标签\r\n            if (end) {\r\n                advance(end[0].length);\r\n            }\r\n            // console.log(match, html);\r\n            return match;\r\n        }\r\n        return false;\r\n    }\r\n    while(html) {\r\n         // 如果index = 0，为开始标签或者结束标签\r\n         // 如果index > 0，两标签之间的文本内容\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd === 0) {\r\n            // 解析开始标签和属性\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            // 解析结束标签\r\n            const endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            // 解析标签之间（开始-文本-结束）(结束-换行空格-开始)文本内容\r\n            let text = html.substring(0, textEnd);\r\n            if (text) {\r\n                chars(text);\r\n                advance(text.length);\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from './parse';\r\n\r\nconst ELEMENT_TYPE = 1;\r\nconst TEXT_TYPE = 3;\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\n\r\nfunction genProps(attrs) {\r\n    let str = '';\r\n    for (let i = 0; i < attrs.length; i ++) {\r\n        let attr = attrs[i]; // {name, value}形式\r\n        if (attr.name === 'style') { // 样式需要进行特殊处理\r\n            // style=\"width: 160px;height: 48px;\"\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`; // 出去最后一个逗号\r\n}\r\n\r\nfunction gen(node) {\r\n    if (node.type === ELEMENT_TYPE) {\r\n        return codegen(node);\r\n    } else {\r\n        let text = node.text;\r\n        if (!defaultTagRE.test(text)) {\r\n            // 如果是纯文本，则直接返回纯文本\r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            // 如果匹配到插值表达式，则进行处理\r\n            // _v(_s(name) + 'text' + _s(age))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0; // 重置lastIndex\r\n            let lastIndex = 0;\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index;\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if (text.length > lastIndex) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',');\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    // _c(\"div\", {id: \"app\"}, _c(\"p\", null, _v(_s(name) + 'text' + _s(age), ...), ...))\r\n    let code = (`_c(\"${ast.tag}\",${\r\n        ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n    }${ast.children.length > 0 ? `,${children}` : \"\"})`);\r\n    return code;\r\n}\r\n\r\n// 对模板进行编译\r\nexport function compileToFunction(template) {\r\n    // 1.将template字符串通过正则匹配，然后解析成语法树\r\n    let ast = parseHTML(template);\r\n    // 2.生成render方法（render方法执行后返回的结果就是虚拟DOM）\r\n    // _c(\"div\", {id: \"app\"}, _c(\"p\", null, _v(_s(name) + 'text' + _s(age), ...), ...))\r\n    let code = codegen(ast);\r\n    // 实现模板引擎，with + new Function（需要了解with函数和Function构造函数）\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code);\r\n    return render;\r\n}","let id = 0;\r\n\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id ++;\r\n        this.subs = [];\r\n    }\r\n    depend() {\r\n        // 不希望重复记录同一个watcher，所以wathcer记录dep\r\n        // this.subs.push(Dep.target);\r\n        Dep.target.addDep(this); // 先让watcher记录dep，通过watcher通过id去重\r\n\r\n        // 一个属性可以在多个组件中使用，所以dep -> 多个watcher\r\n        // 一个组件使用多个属性，所以watcher -> 多个dep\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update()); // 一个属性变化，则所有依赖该属性的组件都需要更新\r\n    }\r\n}\r\nDep.target = null;\r\n\r\nlet stack = [];\r\nexport function pushStack(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\nexport function popStack() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;","import Dep, { popStack, pushStack } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\n\r\n// 每一个属性都有一个dep记录（属性是被观察者），watcher就是观察者（属性变化了会通知观察者来更新） -> 观察者模式\r\n\r\n\r\n// 每个组件都有一个watcher，用一个id进行区分\r\n// 目前只有根组件\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, options, cb) {\r\n        this.id = id ++;\r\n        this.renderWatcher = options; // 是一个渲染watcher\r\n        // getter说明该函数会发生取值（将插值表达式中的属性从data中取出，触发get属性描述符）操\r\n        // 每次都会拿到oldNode，创建newOld，更新DOM后重新赋值vm.$el\r\n        if (typeof exprOrFn === 'string') {\r\n            this.getter = function() {\r\n                return vm[exprOrFn];\r\n            }\r\n        } else {\r\n            this.getter = exprOrFn;\r\n        }\r\n        this.deps = []; // 后续我们需要实现计算属性等，还有一些清理工作\r\n        this.depsId = new Set();\r\n        this.cb = cb;\r\n        this.user = options.user; // 表示是否是用户自己的watcher\r\n\r\n        this.lazy = options.lazy;\r\n        this.dirty = this.lazy; // 缓存值\r\n        this.vm = vm;\r\n        this.value = this.lazy ?  undefined : this.get(); // 调用执行一次\r\n    }\r\n    addDep(dep) {\r\n        // 当多个属性变化需要更新节点，通过dep收集这些属性所在的watcher，多个属性在同一个watcher则需要去重\r\n        // defineReactive的闭包导致每一个属性都是同一个new Dep在收集，所以id不变\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep); // 当前的wathcer是由哪个dep进行记录\r\n            this.depsId.add(id);\r\n            dep.addSub(this); // dep记录当前属性变化后所需更新视图的watcher\r\n        }\r\n    }\r\n    evaluate() {\r\n        this.value = this.get(); // 获取用户函数返回值（计算属性），并标记为脏\r\n        this.dirty = false;\r\n    }\r\n    get() {\r\n        // 静态属性，将当前更新视图的watcher保存\r\n        // getter里的with方法触发数据劫持，get回调中拿到当前属性的watcher\r\n        // 并使用dep.depend方法，depend调用watcher.addDep去重多个属性在同一个watcher\r\n        // Dep.target = this;\r\n        pushStack(this);\r\n        let value = this.getter.call(this.vm); // 将插值表达式中的属性从data中取出（计算属性也会从实例上取值），触发get属性描述符\r\n        // Dep.target = null; // 清空\r\n        popStack();\r\n        return value;\r\n    }\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while(i--) {\r\n            // dep.depend收集渲染watcher（Dep.target）\r\n            this.deps[i].depend(); // 计算属性watcher也收集渲染watcher\r\n        }\r\n    }\r\n    update() {\r\n        if (this.lazy) {\r\n            this.dirty = true; // 如果计算属性依赖值变化了，重置脏值\r\n        } else {\r\n            // 把所有需要update的watcher都暂存起来\r\n            queryWatcher(this);\r\n        }\r\n    }\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get();\r\n        this.get();\r\n        if (this.user) {\r\n            this.cb.call(this.vm, newValue, oldValue);\r\n        }\r\n    }\r\n}\r\n// 给每个属性都增加一个dep，目的是收集watcher（需要去重）\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; // 防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    queue = []; // 再刷新的过程中，可能还有新的watcher放入queue中，继续收集\r\n    has = {};\r\n    pending = false;\r\n    flushQueue.forEach(q => q.run());\r\n}\r\n\r\nfunction queryWatcher(watcher) {\r\n    // 对watcher进行去重\r\n    const id = watcher.id;\r\n    if (!has[id]) {\r\n        queue.push(watcher); // 去重watcher\r\n        has[id] = true;\r\n        // 不管我们的update执行多少次，但是最终所有同步操作执行后异步更新dom（事件循环）\r\n        if (!pending) {\r\n            // setTimeout(flushSchedulerQueue, 0);\r\n            // 通过异步任务，当所有的相应数据变化后，最后只进行一次dom更新\r\n            nextTick(flushSchedulerQueue, 0);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0); // 保存需要执行方法\r\n    waiting = false;\r\n    callbacks = []; // 在执行时可以继续收集方法\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\n// vue中没有直接使用某个api，而是采用了优雅降级的方式\r\n// 先用promise(ie不兼容)  MutationObserver(H5的api，node没有)  IE专享setImmediate  最后setTimeout\r\nlet timerFunc;\r\nif (Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks);\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks); // 传入的回调异步执行\r\n    let textNode = document.createTextNode(1);\r\n    observer.observe(textNode, {\r\n        characterData: true,\r\n    });\r\n    timerFunc = () => {\r\n        textNode.textContent = 2;\r\n    };\r\n} else if (setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks);\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks);\r\n    }\r\n}\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb); // 维护nextTick中的callback方法\r\n    if (!waiting) {\r\n        // setTimeout(() => {\r\n        //     flushCallbacks();\r\n        // }, 0);\r\n        timerFunc(); // 正常直接使用Promise即可\r\n        waiting = true;\r\n    }\r\n}\r\n\r\n\r\nexport default Watcher;","// _c('div', {}, ...children)\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = {};\r\n    }\r\n    // key是元素属性绑定的标识，可能存在\r\n    let key = data.key;\r\n    // key用于识别元素，dom上并不需要进行绑定该属性\r\n    if (key) {\r\n        delete data.key;\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n// _v(_s(name) + 'text' + _s(age))\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// 结构和ast一样吗？ast做的是语法层面的转化，描述语法本身\r\n// 虚拟dom是描述dom元素，可以增加自定义属性\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data, // 属性\r\n        children,\r\n        text\r\n    };\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2) {\r\n    // 比较两个虚拟dom的标签名和key\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}","import { isSameVnode } from \".\";\r\n\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === 'string') {\r\n        // 创建标签\r\n        vnode.el = document.createElement(tag);\r\n        // 设置属性\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child));\r\n        });\r\n    } else {\r\n        // 创建文本\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n    // 比较新老dom的属性\r\n    let oldStyles = oldProps.style || {};\r\n    let newStyles = props.style || {};\r\n    for (let key in oldStyles) {\r\n        // 新dom没有的style属性删除\r\n        if (!newStyles[key]) {\r\n            el.style[key] = '';\r\n        }\r\n    }\r\n    for (let key in oldProps) {\r\n        // 新dom没有的属性删除\r\n        if (!props[key]) {\r\n            el.removeAttribute(key);\r\n        }\r\n    }\r\n\r\n    for (let key in props) {\r\n        if (key === 'style') {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function patch(oldVNode, vnode) {\r\n    const isRealElement = oldVNode.nodeType; // 是否是真实节点\r\n    if (isRealElement) {\r\n        const elm = oldVNode;\r\n        const parentElm = elm.parentNode; // 获取节点父元素\r\n        let newElm = createElm(vnode);\r\n        parentElm.insertBefore(newElm, elm.nextSibling); // 插入生成的节点\r\n        parentElm.removeChild(elm); // 删除老节点\r\n        return newElm;\r\n    }  else {\r\n        // 1.两个节点不是同一个节点  直接删除老的换上新的  （没有比对了）\r\n        // 2.两个节点是同一个节点 (判断节点的tag和 节点的key)  比较两个节点的属性是否有差异 （复用老的节点，将差异的属性更新）\r\n        // 3.节点比较完毕后就需要比较两人的儿子\r\n        return patchVnode(oldNode, vnode);\r\n    }\r\n    function patchVnode(oldVNode, vnode) {\r\n        if (!isSameVnode(oldVNode, vnode)) { // 不是一个节点就直接用新节点替换\r\n            let el = createElm(vnode);\r\n            // 找到当前挂载的dom父节点，用新属性生成的节点进行替换\r\n            oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n            return el;\r\n        }\r\n        // 节点一样，复用老的节点\r\n        // 文本的情况 文本我们期望比较一下文本的内容\r\n        let el = vnode.el = oldVNode.el;\r\n        if (!oldVNode.tag) {\r\n            if (oldVNode.text !== vnode.text) {\r\n                el.textContent = vnode.text; // 新文本覆盖老的文本\r\n            }\r\n        }\r\n        // 比对标签的属性是否变化\r\n        patchProps(el, oldVNode.data, vnode.data);\r\n\r\n        // 比较子节点\r\n        let oldChildren = oldVNode.children || [];\r\n        let newChildren = vnode.children || [];\r\n\r\n        if (oldChildren.length > 0 && newChildren.length > 0) {\r\n            // 需要比较子节点\r\n            updateChildren(el, oldChildren, newChildren);\r\n        } else if (oldChildren.length > 0) {\r\n            // 老节点有子节点，新节点没有子节点，直接删除\r\n            el.innerHTML = '';\r\n        } else if (newChildren.length > 0) {\r\n            // 老节点没有子节点，新节点有子节点，遍历插入\r\n            mountChildren(el, newChildren);\r\n        }\r\n        return el;\r\n    }\r\n    function mountChildren(el, newChildren) {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            let child = newChildren[i];\r\n            el.appendChild(createElm(child));\r\n        }\r\n    }\r\n    function updateChildren(el, oldChildren, newChildren) {\r\n        // 我们操作列表通常有push、shift、unshift、pop、reverse、sort等方法\r\n        // vue2中使用双指针来比较两个节点\r\n        let oldStartIndex = 0;\r\n        let newStartIndex = 0;\r\n        let oldEndIndex = oldChildren.length - 1;\r\n        let newEndIndex = newChildren.length - 1;\r\n        let oldStartVnode = oldChildren[0];\r\n        let newStartVnode = newChildren[0];\r\n        let oldEndVnode = oldChildren[oldEndIndex];\r\n        let newEndVnode = newChildren[newEndIndex];\r\n\r\n        function makeIndexByKey(children) {\r\n            let map = {};\r\n            children.forEach((child, index) => {\r\n                map[child.key] = index;\r\n            });\r\n            return map;\r\n        }\r\n        let map = makeIndexByKey(oldChildren);\r\n\r\n        while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n            // 在给动态列表增加key时，避免使用索引作为key值（old:[a,b,c],new[d,a,b,c].由于a和d索引一致，从尾尾比对变成首首比对）\r\n            // 有一方头指针大于尾指针就停止循环\r\n            if (!oldStartVnode) {\r\n                oldStartVnode = oldChildren[++oldStartIndex];\r\n            } else if (!oldEndVnode) {\r\n                oldEndVnode = oldChildren[--oldEndIndex];\r\n            } else if (isSameVnode(oldStartVnode, newStartVnode)) { // old a,b,c    new a,b，开头相同，末尾有增减 \r\n                patchVnode(oldStartVnode, newStartVnode); // 如果相同节点，则递归比较子节点\r\n                oldStartVnode = oldChildren[++oldStartIndex];\r\n                newStartVnode = newChildren[++newStartIndex];\r\n            } else if (isSameVnode(oldEndVnode, newEndVnode)) { // old a,b,c    new d,a,b,c 末尾相同，开头有增减 \r\n                patchVnode(oldEndVnode, newEndVnode); // 如果相同节点，则递归比较子节点\r\n                oldEndVnode = oldChildren[--oldEndIndex];\r\n                newEndVnode = newChildren[--newEndIndex];\r\n            } else if (isSameVnode(oldEndVnode, newStartVnode)) { // old a,b,c,d     new  d,a,b,c 尾部移动到前面\r\n                // 剩下的交叉（旧尾新首比对）\r\n                patchVnode(oldEndVnode, newStartVnode);\r\n                el.insertBefore(oldEndVnode.el, oldStartVnode.el); // 将老节点的尾部移动到前面\r\n                oldEndVnode = oldChildren[--oldEndIndex];\r\n                newStartVnode = newChildren[++newStartIndex];\r\n            } else if (isSameVnode(oldStartVnode, newEndVnode)) { // old a,b,c,d     new  b,c,d,a 尾部移动到前面\r\n                // 剩下的交叉（旧首新尾比对）\r\n                patchVnode(oldStartVnode, newEndVnode);\r\n                el.insertBefore(oldStartVnode.el, newEndVnode.el.nextSibling); // 将老节点的前面移动到尾部\r\n                oldStartVnode = oldChildren[++oldStartIndex];\r\n                newEndVnode = newChildren[--newEndIndex];\r\n            } else {\r\n                // 乱序比对\r\n                // 根据老的子节点做一个映射表map，用新的去找，找到就移动，找不到就将新的添加，多得最后删除\r\n                let moveIndex = map[newStartVnode.key]; // 如果拿到了对应的索引则说明要移动\r\n                if (moveIndex !== undefined) {\r\n                    let moveVnode = oldChildren[moveIndex];\r\n                    el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n                    oldChildren[moveIndex] = undefined; // 表示这个节点已经移走\r\n                    patchVnode(moveVnode, newStartVnode); // 移动后别忘了继续比较子节点\r\n                } else {\r\n                    // 新节点在映射中找不到，直接插入新的节点\r\n                    el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\r\n                }\r\n                // 最后保存新的头节点\r\n                newStartVnode = newChildren[++newStartIndex];\r\n            }\r\n        }\r\n\r\n        if (newStartIndex <= newEndIndex) { // 新节点的子节点更多，将多余节点插入\r\n            for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n                let childEl = createElm(newChildren[i]);\r\n                // 这里可能是向前追加，可能是向后追加（判断后面还有没有节点知悉是向头还是向尾插入）\r\n                let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null;\r\n                el.insertBefore(childEl, anchor); // anchor为null时直接从尾部插入appendChild\r\n            }\r\n        }\r\n        if (oldStartIndex <= oldEndIndex) { // 旧节点的子节点更多，删除多余的节点\r\n            for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n                if (oldChildren[i]) {\r\n                    let childEl = oldChildren[i].el;\r\n                    el.removeChild(childEl);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\nexport function initLifeCycle(Vue) {\r\n    // 将vnode转化成为真实dom\r\n    Vue.prototype._update = function(vnode) {\r\n        // 通过_render方法，拿到虚拟dom\r\n        const vm = this;\r\n        const el = vm.$el;\r\n        // patch 初始化、更新\r\n        // vm.$el = patch(el, vnode); // 每次覆盖最新的dom\r\n        const prevVnode = vm._vnode;\r\n        if (prevVnode) {\r\n            // 后续使用diff算法比对更新\r\n            vm.$el = patch(prevVnode, vnode);\r\n        } else {\r\n            // 第一次直接替换模板\r\n            vm.$el = patch(el, vnode);\r\n        }\r\n    }\r\n    // _c('div', {}, ...children) 创建元素节点\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this, ...arguments);\r\n    }\r\n    // _v(_s(name) + 'text' + _s(age)) // 创建文本节点\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this, ...arguments);\r\n    }\r\n    // 直接返回文本字符串即可\r\n    Vue.prototype._s = function(value) {\r\n        if (typeof value !== 'object') return value;\r\n        return JSON.stringify(value);\r\n    }\r\n    Vue.prototype._render = function() {\r\n        // 使得render中的with(this)指向vm，从而获取到data中的值\r\n        // 并返回由with包裹的_c(tag, {}, ...children)方法\r\n        return this.$options.render.call(this);\r\n    }\r\n}\r\n\r\n/**\r\n * vue的核心流程：\r\n * 1.创建响应式的数据\r\n * 2.模板转换成ast语法树\r\n * 3.将ast语法树转换成render函数（render函数会去产生虚拟节点、使用响应式数据）\r\n * 4.每次更新数据只执行render函数（无需再执行ast转化过程）\r\n * 通过虚拟节点创建真是DOM\r\n */\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el; // 保存最开始的dom\r\n    // 调用render方法产生虚拟节点 虚拟DOM\r\n    // 渲染时通过with方法，插值表达式中的属性会从实例中取值\r\n    // 做到data的属性和dom视图绑定在一起\r\n    const updateComponent = () => {\r\n        // 根据虚拟DOM生成真是DOM\r\n        // 插入到需要挂载的el元素中\r\n        vm._update(vm._render()); // vm.$options.render()\r\n    };\r\n    // 一个watcher就是一个组件的更新观察者\r\n    new Watcher(vm, updateComponent, true);\r\n}\r\n\r\nexport function callHook(vm, hook) { // 调用钩子函数\r\n    const hanlers = vm.$options[hook];\r\n    // hanlers是一个数组\r\n    if (hanlers) {\r\n        hanlers.forEach(hand => hand.call(vm));\r\n    }\r\n}","const oldArrayProto = Array.prototype; // 保存Array上已有的原型方法\r\nexport const newArrayProto = Object.create(oldArrayProto); // 通过已有的原型方法，创建一个对象\r\n\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'sort', 'reverse', 'splice']; // 记录会改变数组的原型方法名称\r\n\r\nmethods.forEach(method => {\r\n    // 重写对象中的方法\r\n    newArrayProto[method] = function (...args) {\r\n        // 调用原来的方法对数组进行操作（注意this指向）\r\n        const result = oldArrayProto[method].call(this, ...args);\r\n        let inserted = null; // 保存数组新增的元素\r\n        let ob = this.__ob__; // 获取调用者身上保存的Observe实例，方式后续使用walk、observeArray方法\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice': \r\n                inserted = args.slice(2);\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n        if (inserted) {\r\n            ob.observeArray(inserted); // 遍历数组，对引用类型子元素进行监听\r\n        }\r\n        // 对改变数组的值进行劫持\r\n        ob.dep.notify(); // 通知数组的watcher进行更新\r\n        return result;\r\n    }\r\n});\r\n\r\n","import { newArrayProto } from './array';\r\nimport Dep from './dep';\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n\r\n        // 给每个对象都增加依赖收集（对象、数组增加新的属性元素都能都收集到）\r\n        this.dep = new Dep(); // 让整个对象被收集到\r\n\r\n        // 在data属性上保存实例，以便后续随时可以调用walk/observeArray等方法\r\n        Object.defineProperty(data, '__ob__', { \r\n            value: this,\r\n            enumerable: false, // 不可被枚举（遍历），方死循环\r\n        });\r\n        if (Array.isArray(data)) {\r\n            // 劫持数组每个属性极其耗费性能，所以直接修改会对数组造成改动的方法\r\n            data.__proto__ = newArrayProto; // 改变data中数组变量的原型（影响性能）\r\n            this.observeArray(data); // \r\n        }\r\n        this.walk(data);\r\n    }\r\n    walk(data) {\r\n        // 遍历data的所有属性，依次劫持\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n    observeArray(data) {\r\n        // 劫持数组的属性\r\n        data.forEach(item => observe(item));\r\n    }\r\n}\r\n\r\n// 深层次嵌套产生递归，递归多了性能差，不存在的属性监控不到，存在的属性要重写方法\r\nfunction dependArray(value) {\r\n    for(let i = 0; i < value.length; i ++) {\r\n        let current = value[i];\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if (Array.isArray(current)) {\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) { // 与Object.defineProperty形成闭包\r\n    let childOb = observe(value); // 若value也为对象，增继续向下监听\r\n    let dep = new Dep(); // 闭包到时dep一直被get和set引用\r\n    // 属性劫持，对data的每个属性\"重新定义\"，影响了性能\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            if (Dep.target) {\r\n                dep.depend(); // watcher获取所需属性，让收集器记住当前属性的watcher\r\n                if (childOb) {\r\n                    childOb.dep.depend(); // 不止对象的属性，数组、对象本身也依赖收集\r\n                    if (Array.isArray(value)) {\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        set(newVal) {\r\n            if (value === newVal) return;\r\n            observe(newVal); // 如果设置新值为对象，则需要继续劫持\r\n            value = newVal;\r\n            dep.notify(); // 通知更新\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 只劫持对象，多层对象深度劫持时的出口\r\n    if (typeof data !== 'object' || data == null) return;\r\n    if(data.__ob__ instanceof Observer){ // 说明这个对象被代理过了\r\n        return data.__ob__;\r\n    }\r\n    return new Observer(data);\r\n}","import Dep from \"./observe/dep\";\r\nimport { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from \"./observe/watcher\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            // 取vm.name => 访问vm._data.name\r\n            return vm[target][key];\r\n        },\r\n        set(newVal) {\r\n            // 设置vm.name => 访问vm._data.name\r\n            vm[target][key] = newVal;\r\n        }\r\n    })\r\n}\r\n\r\n// 初始化data\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // 赋值后如果是方法，直接调用this会指向window\r\n    data = typeof data === 'function' ? data.call(vm) : data; // 执行方法data，指向Vue实例\r\n    vm._data = data; // 将data挂载到实例上，方面每次使用（vm.$options.data -> vm._data）\r\n    // 拿到data后对其进行数据劫持（监听data中数据的变化）\r\n    observe(data);\r\n    // 将vm._data代理到vm身上\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key);\r\n    }\r\n}\r\n// 计算属性\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    const watchers = vm._computedWatchers = {};\r\n    for (let key in computed) {\r\n        let userDef = computed[key];\r\n\r\n        // 我们需要监控计算属性 get 变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get;\r\n\r\n        // 传入lazy避免初始化Watcher立刻执行fn，并将watcher与当前计算属性对应起来\r\n        watchers[key] = new Watcher(vm, fn, {lazy: true});\r\n\r\n        // 劫持计算属性，等触发（异步，所以此时计算属性已经和计算wathcer绑定）_update(_render)触发计算属性的get\r\n        defineComputed(vm, key, userDef);\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => {});\r\n    // 将计算属性代理到实例上\r\n    Object.defineProperty(target, key, {\r\n        // defineProperty中this指向代理对象\r\n        get: createComputedGetter(key),\r\n        set: setter,\r\n    });\r\n}\r\n// 所以实际上不是计算属性收集依赖，而是让依赖收集计算wather和渲染watcher，然后通过get触发更新\r\nfunction createComputedGetter(key) {\r\n    // 需要检测当前getter是否需要执行（依赖不变不用重新执行）\r\n    return function() {\r\n        const watcher = this._computedWatchers[key]; // 拿到计算属性对应的watcher\r\n        if (watcher.dirty) { // 避免多次执行\r\n            // 执行watcher.get方法，通过触发依赖的属性get记录当前的计算属性watcher，保存计算属性的值value\r\n            // 计算属性取值依赖属性时，依赖属性的dep记录了当前计算属性watcher[0]\r\n            watcher.evaluate();\r\n        }\r\n        if (Dep.target) {\r\n            // 计算属性出栈后 还有渲染watcher，让依赖属性的dep将渲染watcher也记录\r\n            // 如果依赖属性不变化，直接从当前计算属性的watcher中取值\r\n            // 依赖属性变化，先让计算watcher重置dirty，再触发渲染wahter重新取值，重新计算新的计算属性\r\n            watcher.depend();\r\n        }\r\n        return watcher.value;\r\n    }\r\n}\r\n// 监听属性\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for (let key in watch) {\r\n        const handler = watch[key]; // 字符串、数组、函数、对象\r\n        if (Array.isArray(handler)) {\r\n            for(let i = 0;i < handler.length; i++) {\r\n                createWatcher(vm, key, handler[i]);\r\n            }\r\n        } else {\r\n            createWatcher(vm, key, handler);\r\n        }\r\n    }\r\n}\r\nfunction createWatcher(vm, key, handler) {\r\n    // handler字符、函数、对象(暂不考虑)\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler]; // 取出当前监听的属性值\r\n    }\r\n    return vm.$watch(key, handler);\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    Vue.prototype.$watch = function (expOrFn, cb) {\r\n        // expOrFn可能是字符name，可能时函数() => vm.name\r\n        // expOrFn是取值操作，出发了监听属性的get收集到当前watcher\r\n        // name变化了 直接执行cb函数即可\r\n        new Watcher(this, expOrFn, {user: true}, cb);\r\n    }\r\n}\r\n","import { compileToFunction } from \"./complier\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\n// 给Vue增加init方法\r\nexport function initMixin(Vue) {\r\n    // new Vue初始化需要执行的操作\r\n    Vue.prototype._init = function (options) {\r\n        // 将传进来的用户选项挂载到实例上\r\n        const vm = this;\r\n        // 定义的全局指令和过滤器...都会（合并）挂载到实例上\r\n        vm.$options = mergeOptions(this.constructor.options, options);\r\n\r\n        // 初始化状态之前\r\n        callHook(vm, 'beforeCreate');\r\n        // 初始化参数各个属性的状态（data、watch、computed）\r\n        initState(vm);\r\n\r\n        // 初始化状态之后\r\n        callHook(vm, 'created');\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el); // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        el = document.querySelector(el); // 找到实例挂载的元素\r\n        let ops = vm.$options;\r\n        if (!ops.render) { // 查找有没有render函数\r\n            let template;\r\n            if (!ops.template && el) {\r\n                // 没有模板但是挂载了元素，直接使用挂载元素(字符串)\r\n                template = el.outerHTML;\r\n            } else {\r\n                // 有模板且挂载了元素，直接使用模板\r\n                if (el) {\r\n                    template = ops.template;\r\n                }\r\n            }\r\n            if (template) {\r\n                // 拿到模板，则对模板进行编译，得到render方法\r\n                const render = compileToFunction(template);\r\n                // 将render方法绑定到实例的options上\r\n                ops.render = render;\r\n            }\r\n        }\r\n        // 拿到了Vue的实例化对象（包含所有选项和render方法），以及需要挂载的元素节点\r\n        mountComponent(vm, el);\r\n    }\r\n}","import { initGlobalAPI } from \"./globalAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {\r\n    // options就是用户的选项\r\n    this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 拓展Vue的实例方法\r\ninitLifeCycle(Vue); // vm_update、vm_render\r\ninitStateMixin(Vue); // 实现了nextTick、$watcher\r\ninitGlobalAPI(Vue);\r\n\r\nexport default Vue;"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","len","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","_loop","i","obj","split","item","_item$split","_item$split2","_slicedToArray","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","pushStack","popStack","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","user","lazy","dirty","undefined","get","dep","has","add","evaluate","call","queryWatcher","run","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","_len","arguments","Array","_key","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","oldNode","replaceChild","oldChildren","newChildren","updateChildren","innerHTML","mountChildren","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifeCycle","prototype","_update","$el","prevVnode","_vnode","_c","apply","_v","_s","_typeof","_render","$options","mountComponent","updateComponent","callHook","hanlers","hand","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","result","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childOb","set","newVal","initState","opts","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","handler","createWatcher","$watch","initStateMixin","$nextTick","expOrFn","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML"],"mappings":"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"}